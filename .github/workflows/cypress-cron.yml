name: Cypress E2E Tests with Slack Notifications

on:
  push:
    branches: [ cypress-config ]
  pull_request:
    branches: [ cypress-config ]

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: onecgiar-pr-client
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: onecgiar-pr-client/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Download environment files from AWS Secrets Manager
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_SECRET }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SECRET }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        mkdir -p src/environments

        SECRET=$(aws secretsmanager get-secret-value \
          --secret-id dev/app/frontend/prms/reportingtool \
          --query SecretString \
          --output text)

        echo "$SECRET" > src/environments/environment.ts

        cp src/environments/environment.ts \
          src/environments/environment.prod.ts

    - name: Start Angular application
      run: |
        npm start &
        npx wait-on@8 http://localhost:4200 --timeout 300000
      env:
        CI: true

    - name: Run Cypress tests
      id: cypress
      run: |
        set +e
        npm run cypress:run
        CYPRESS_EXIT_CODE=$?
        echo "cypress_exit_code=$CYPRESS_EXIT_CODE" >> $GITHUB_OUTPUT
        exit $CYPRESS_EXIT_CODE
      env:
        CYPRESS_TEST_EMAIL: ${{ secrets.CYPRESS_TEST_EMAIL }}
        CYPRESS_TEST_PASSWORD: ${{ secrets.CYPRESS_TEST_PASSWORD }}
      continue-on-error: true

    - name: Upload Cypress screenshots on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots
        path: onecgiar-pr-client/cypress/screenshots
        retention-days: 7

    - name: Upload Cypress videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-videos
        path: onecgiar-pr-client/cypress/videos
        retention-days: 7

    - name: Send Slack notification on success
      if: steps.cypress.outputs.cypress_exit_code == '0'
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{
          "text": "‚úÖ Pruebas de Cypress Exitosas",
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": "‚úÖ Cypress Tests - √âXITO"
              }
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Proyecto:* OneCGIAR PR"
                },
                {
                  "type": "mrkdwn", 
                  "text": "*Rama:* ${{ github.ref_name }}"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Estado:* Todas las pruebas pasaron ‚úÖ"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Commit:* <https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>"
                }
              ]
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "üéâ *¬°Excelente!* Todas las pruebas E2E de Cypress se ejecutaron correctamente sin errores."
              }
            },
            {
              "type": "context",
              "elements": [
                {
                  "type": "mrkdwn",
                  "text": "Ejecutado por: ${{ github.actor }} | <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Ver Action>"
                }
              ]
            }
          ]
        }' \
        ${{ secrets.SLACK_WEBHOOK_URL || 'https://hooks.slack.com/services/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' }}

    - name: Get Cypress test results and send Slack notification on failure
      if: steps.cypress.outputs.cypress_exit_code != '0'
      run: |
        # Get the latest test results
        CYPRESS_RESULTS=""
        FAILED_TESTS=""
        
        # Check if there are any screenshots (indicating failures)
        if [ -d "cypress/screenshots" ] && [ "$(ls -A cypress/screenshots 2>/dev/null)" ]; then
          CYPRESS_RESULTS="‚ùå **Tests que fallaron:**\n"
          for screenshot in cypress/screenshots/**/*.png; do
            if [ -f "$screenshot" ]; then
              test_name=$(basename "$screenshot" .png | sed 's/.*-- //g' | sed 's/ (failed)//g')
              FAILED_TESTS="${FAILED_TESTS}‚Ä¢ \`${test_name}\`\n"
            fi
          done
          CYPRESS_RESULTS="${CYPRESS_RESULTS}${FAILED_TESTS}"
        fi
        
        # Check for videos to count total tests
        VIDEO_COUNT=0
        if [ -d "cypress/videos" ]; then
          VIDEO_COUNT=$(find cypress/videos -name "*.mp4" | wc -l)
        fi
        
        # Get error information from Cypress output if available
        if [ -f "cypress/results/output.json" ]; then
          CYPRESS_RESULTS="${CYPRESS_RESULTS}\nüìã **Informaci√≥n detallada disponible en artefactos**"
        fi
        
        # If no specific results, use generic message
        if [ -z "$CYPRESS_RESULTS" ]; then
          CYPRESS_RESULTS="‚ö†Ô∏è **Las pruebas de Cypress fallaron.** Revisa los logs del GitHub Action para m√°s detalles."
        fi
        
        # Add test summary
        CYPRESS_RESULTS="üéØ **Total de archivos de prueba:** ${VIDEO_COUNT}\n\n${CYPRESS_RESULTS}"
        
        # Send Slack notification
        curl -X POST -H 'Content-type: application/json' \
        --data '{
          "text": "‚ùå Pruebas de Cypress Fallaron",
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": "‚ùå Cypress Tests - FALL√ì"
              }
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Proyecto:* OneCGIAR PR"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Rama:* ${{ github.ref_name }}"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Estado:* Pruebas fallaron ‚ùå"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Commit:* <https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>"
                }
              ]
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "**Detalles del Error:**\n'"$CYPRESS_RESULTS"'"
              }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "üìé **Artefactos Disponibles:**\n‚Ä¢ üì∏ Screenshots de las pruebas que fallaron\n‚Ä¢ üé• Videos de todas las pruebas ejecutadas\n‚Ä¢ üìã Logs detallados en GitHub Action\n‚Ä¢ üíæ Todos los archivos se conservan por 7 d√≠as"
              }
            },
            {
              "type": "context",
              "elements": [
                {
                  "type": "mrkdwn",
                  "text": "Ejecutado por: ${{ github.actor }} | <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Ver Action y Descargar Artefactos>"
                }
              ]
            }
          ]
        }' \
        ${{ secrets.SLACK_WEBHOOK_URL || 'https://hooks.slack.com/services/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' }}

    - name: Fail the job if Cypress tests failed
      if: steps.cypress.outputs.cypress_exit_code != '0'
      run: exit 1 