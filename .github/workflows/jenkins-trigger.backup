name: Trigger Jenkins Docker

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:

jobs:
  trigger-job:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Get the branch name and build the URL for Jenkins
      - name: Get branch name and build Jenkins URL (BACKEND)
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}  # Remove 'refs/heads/' from GITHUB_REF
          JENKINS_URL="https://automation.prms.cgiar.org/job/prms-reporting-tool-dev-docker/build"
          echo "Jenkins job URL for the branch $BRANCH_NAME is: $JENKINS_URL"
          echo "JENKINS_URL=${JENKINS_URL}" >> $GITHUB_ENV

      # Step 2: Execute the curl command to trigger the job in Jenkins with the dynamically built URL
      - name: Trigger Jenkins Job
        run: |
          curl -X POST ${{ env.JENKINS_URL }} --user ${{ secrets.JENKINS_USERNAME }}:${{ secrets.JENKINS_API_TOKEN }}
        env:
          JENKINS_URL: ${{ env.JENKINS_URL }}
          JENKINS_USERNAME: ${{ secrets.JENKINS_USERNAME }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}

      - name: Get branch name and build Jenkins URL (FRONTEND)
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}  # Remove 'refs/heads/' from GITHUB_REF
          JENKINS_URL="https://automation.prms.cgiar.org/job/prms-reporting-tool-dev-client-docker/build"
          echo "Jenkins job URL for the branch $BRANCH_NAME is: $JENKINS_URL"
          echo "JENKINS_URL=${JENKINS_URL}" >> $GITHUB_ENV

      # Step 2: Execute the curl command to trigger the job in Jenkins with the dynamically built URL
      - name: Trigger Jenkins Job
        run: |
          curl -X POST ${{ env.JENKINS_URL }} --user ${{ secrets.JENKINS_USERNAME }}:${{ secrets.JENKINS_API_TOKEN }}
        env:
          JENKINS_URL: ${{ env.JENKINS_URL }}
          JENKINS_USERNAME: ${{ secrets.JENKINS_USERNAME }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
